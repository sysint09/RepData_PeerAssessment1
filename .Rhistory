names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect[bar]
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<_c(4,5)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
exit
quit
ls()
rm(ls())
library(swirl)
rm(list=ls())
swirl()
class(my_vector)
my_matrix<-my_vector
?matrix
my-matrix2(data=1:20,nrow=4,ncol=5)
my_matrix2<-matrix(data=1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(vector,my_matrix)
cbind(patients,my_matrix)
my_data<_data.frame(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
?data.frame
?colnames
colnames(my_data)<
colnames(my_data)
colnames(my_data)<-cnames
colnames(my_data)
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!(5==7)
!5==7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
c(TRUE, TRUE, TRUE) & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
?which
which(ints>7)
any(ints<0)
all(ints>0)
View(my_data)
View(my_data)
swirl()
swirl()
library(swirl)
rm(list=ls())
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head()
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flags_shape,range)
lapply(flag_shape,range)
lapply(flag_shapes,range)
shape_mat<-spally(flag_shapes,range)
shape_mat<-saplly(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5,5,5,6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply<-sapply(flags,unique)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
FUN(X[[1]])
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags, summary)
flags
flags$red
flags
?'$'
class(flags)
head(flags)
tapply(flags$population, flags$landmass, summary)
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants)
tail(plants,15)
summary(plants)
?table
table(plants$Active_growth_Period)
table(plants$Active_Growth_Period)
plants$Active_Growth_Period
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,c(0.3,0.7))
sample(c(0,1),100,replace=TRUE,c(0.3,0.7))
flips<-sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
flips<-sample(c(0,1), 100, replace = TRUE, prob = c(0.5, 0.5))
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips<-rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
flips2<-rbinom(100, size = 2, prob = 0.7)
flips2
flips2<-rbinom(100, size = 4, prob = 0.7)
flips2
flips2<-rbinom(1, size = 100, prob = 0.7)
flips2
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(10,10)
rpois(5,10)
replicate(100, rpois(5, 10))
my_pois<-replicate(100, rpois(5, 10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
d1
unclass(d1)
d1
d2<-as.date("1969-01-01")
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t1)
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<_strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
?strptime
t3
Sys.time()> t1
Sys.time()- t1
difftime(Sys.time(), t1, units = 'days')
ok()
quit()
?solve
?matrix
a=matrix(1:4,nrow=2,ncol=1)
a
a=matrix(1:4,nrow=2,ncol=2)
a
class(a)
b=solve(a)
b
a*b
a%*%b
a=matrix(1:6,nrow=2,ncol=3)
a
b=solve(a)
a1=rbind(a,c(1,1,1))
a1
b1=solve(a1)
class(a1)
b
library(datasets)
data(iris)
?iris
head(iris)
View(iris)
a=split(iris,iris$Species)
a
iris$Species='virginica'
iris[,iris$Species='virginica']
iris[,Species='virginica']
iris[Species='virginica']
iris$Species
iris[Species=='virginica']
iris[,Species=='virginica']
iris[,iris$Species=='virginica']
iris[,"Species"=='virginica']
iris[,"Species"=='virginica']
iris["Species"=='virginica']
iris["Species"=='virginica']
iris[,"Species"=='virginica']
iris[,"Species"=="virginica"]
iris["Species"]
iris[,"Species"]
iris[Sepal.Length,"Species"]
iris["Sepal.Length","Species"]
iris["Sepal.Length";"Species"]
iris["Species"="virginica"]
class(iris)
iris[iris["Species"="virginica"],]
iris$Species
iris[iris$Species="virginia"]
iris[iris$Species=="virginia"]
iris["Species"]
?==
?=
x=5
x==5
iris["Sepal.Length"]
iris["Sepal.Length"]["Species"]
iris["Sepal.Length",]
iris["Sepal.Length"]
iris[,"Sepal.Length"]
iris[,"Sepal.Length","Species"]
iris["Species"]=="virginica"
cond<-iris["Species"]=="virginica"
iris[cond,"Sepal.Length"]
mean(iris[cond,"Sepal.Length"])
x<-iris[101:150,"Sepal.Length"]
x
mean(x)
iris["Species"]
head(iris)
ls()
rm(ls())
ls()
rm("a")
rm("iris")
rm(ls())
rm([ls()])
ls()
ls()
library(datasets)
data(iris)
?iris
iris
View(iris)
cond<-iris["Species"]=="virginica"
cond
mean(iris[cond,"Sepal.Length"])
apply(iris[,1:4],2,mean)
library(datasets)data(mtcars)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
View(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
82.63636-209.21429
debug(ls)
ls
ls()
?
q
exit
quit
q
ls
82.63636-209.21429
tapply(mtcars$hp, mtcars$cyl, mean)
res<-tapply(mtcars$hp, mtcars$cyl, mean)
q
q
ls
res<-tapply(mtcars$hp, mtcars$cyl, mean)
C
q
q
q
Q
undebug(ls)
res<-tapply(mtcars$hp, mtcars$cyl, mean)
res
res[1]-res[3]
set.seed(1)
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?set.seed
?rbinom
?ginv
x<-rnorm(100)
y<-rnorm(100)
plot(x,y)
plot(x,y,pch=4)
pchShow()
example(points)
x<-rnorm(100)
y<-rnorm(100)
plot(x,y,pch=20)
title("My scatterplot")
legend("topleft",legend="Data")
egend("topleft",legend="Data",pch=20)
legend("topleft",legend="Data",pch=20)
graphics.off()
plot(x,y,pch=20)
title("My scatterplot")
legend("topleft",legend="Data",pch=20)
text(-2,-2,"label")
fit<-lm(x~y)
abline(fit)
abline(fit,lwd=6)
adline(fit,lwd=10)
abline(fit,lwd=1,col="white")
graphics.off()
plot(x,y,xlab="Weight",ylab="Height",main="My scatterplot",pch=20)
readline(prompt = "Premere un tasto ......")
graphics.off()
plot(x,y,xlab="Weight",ylab="Height",main="My scatterplot",pch=20)
legend("topright",legend="Data",pch=20)
abline(fit,lwd=3,col="red")
z<-rpois(100,2)
graphics.off()
par(mfrow=c(2,1))
plot(x,y,pch=20)
plot(x,z,pch=19)
graphics.off()
par(mfrow=c(1,2))
plot(x,y,pch=20)
plot(x,z,pch=19)
graphics.off()
par(mfrow=c(1,2))
par(mar=c(4,4,2,2))
plot(x,y,pch=20)
plot(x,z,pch=19)
y1<-x+rnorm(100)
gfactor<-gl(2,50,labels("Male","Female"))
graphics.off()
###
y1<-x+rnorm(100)
gfactor<-gl(2,50)
gfactor<-gl(2,50,labels("Male","Female"))
plot(x,y,type="n")
points(x[g=="Male"],y[g=="Female"],color="blue")
points(x[g=="Male"],y[g=="Male"],color="blue")
points(x[g=="Male"],y[g=="Female"],col="blue")
points(x[g=="Male"],y[g=="Female"],col="blue")
points(x[g=="Male"],y[g=="Female"],col="blue")
points(x[g=="Male"],y[g=="Female"])
gfactor<-gl(2,50,labels("Male","Female"))
points(x[g=="Male"],y[g=="Female"])
gfactor<-gl(2,50,labels=c("Male","Female"))
gfactor<-gl(2,50,labels=c("Male","Female"))
points(x[g=="Male"],y[g=="Female"])
plot(x,y,type="n")
points(x[gfactor=="Male"],y[gfactor=="Female"],col="blue")
plot(x,y,type="n")
points(x[gfactor=="Male"],y[gfactor=="Female"],col="blue")
gfactor<-gl(2,50,labels=c("Male","Female"))
points(x[gfactor=="Male"],y[gfactor=="Male"],col="blue")
points(x[gfactor=="Male"],y[gfactor=="Male"],col="green")
points(x[gfactor=="Male"],y[gfactor=="FeMale"],col="red")
points(x[gfactor=="Male"],y[gfactor=="FeMale"],col="red")
points(x[gfactor=="Male"],y[gfactor=="FeMale"],col="red")
points(x[gfactor=="Male"],y[gfactor=="FeMale"],col="red")
points(x[gfactor=="Male"],y[gfactor=="Male"],col="red")
?dir()
dir()
?search
search()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
sessionInfo()
dir()
ls
ls()
Sys.getenv("http_proxy")
dir()
library(swirl)
rm(list=ls())
install_from_swirl("Getting and Cleaning Data")
swirl()
?read.csv
mydf<-read.csv(path2csv=path2csv, stringsAsFactors = FALSE)
mydf<-read.csv(file=path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select()
?select
select(cran, ip_id, package, country
)
5:20
select(cran,
| r_arch:country)
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package == "swirl")
bye()
exit
library(installr)
ver()
?version
R.Version()
install.packages("installr")
P<-C(0.1,0.2,0.3,0.4)
P<-C(0.1,0.2,0.3,0.4)
p<-C(0.1,0.2,0.3,0.4)
p<-c(0.1,0.2,0.3,0.4)
x<-2:5
p*x
sum(p*x)
sum(p*x^2)
p<-c(0.2,0.8)
x<-c(-4,1)
m=sum(p*x)
M<-sum(p*x^2)
M-m^2
x <- 1:4
p <- x/sum(x)
sum(p*x)
x
p
install.packages("knitr")
install.packages("xtable")
setwd('DataScience/GIT/RepData_PeerAssessment1')
data<-read.csv('activity.csv')
data$date<-as.POSIXct(data$date,format='%Y-%m-%d')
str(data)
View(data)
library(dlypr)
library(dylpr)
library(dplyr)
meanperday<-group_by(data,date)
meanperday<-aggregate(maeanperday,sum(step))
meanperday<-aggregate(meanperday,sum(step))
meanperday<-summarize(meanperday,stepDay=sum(step))
View(meanperday)
summarize(meanperday,stepDay=sum(step))
meanperday<-group_by(data,date)
summarize(meanperday,stepDay=sum(step))
summarize(meanperday,stepDay=sum(steps))
str(data)
